'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sizeIdSelector = exports.listenWidth = exports.listenHeight = exports.listenSize = exports.createWidthAction = exports.createSizeAction = exports.createHeightAction = exports.createRemAction = exports.getRem = exports.getWidth = exports.getHeight = exports.doc = undefined;

var _gte2 = require('lodash/fp/gte');

var _gte3 = _interopRequireDefault(_gte2);

var _stubTrue2 = require('lodash/stubTrue');

var _stubTrue3 = _interopRequireDefault(_stubTrue2);

var _property2 = require('lodash/property');

var _property3 = _interopRequireDefault(_property2);

var _over2 = require('lodash/over');

var _over3 = _interopRequireDefault(_over2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

var _flow2 = require('lodash/flow');

var _flow3 = _interopRequireDefault(_flow2);

var _debounce2 = require('lodash/debounce');

var _debounce3 = _interopRequireDefault(_debounce2);

var _constant2 = require('lodash/constant');

var _constant3 = _interopRequireDefault(_constant2);

var _cond2 = require('lodash/cond');

var _cond3 = _interopRequireDefault(_cond2);

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.createListener = createListener;
exports.listenResize = listenResize;

var _actions = require('./actions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var doc = exports.doc = (0, _property3.default)('document.documentElement');
var getHeight = exports.getHeight = (0, _flow3.default)(doc, (0, _property3.default)('clientHeight'));
var getWidth = exports.getWidth = (0, _flow3.default)(doc, (0, _property3.default)('clientWidth'));
var getRem = exports.getRem = function getRem(windowObj) {
  return (0, _flow3.default)(doc, windowObj.getComputedStyle, (0, _property3.default)('fontSize'))(windowObj);
};

var createRemAction = exports.createRemAction = (0, _flow3.default)(getRem, _actions.setRem);
var createHeightAction = exports.createHeightAction = (0, _flow3.default)(getHeight, _actions.setHeight);
var createSizeAction = exports.createSizeAction = (0, _flow3.default)((0, _over3.default)(getHeight, getWidth), _actions.setSizeArr);
var createWidthAction = exports.createWidthAction = (0, _flow3.default)(getWidth, _actions.setWidth);

function createListener(actionCreator) {
  return function (dispatch, windowObj) {
    var wait = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;
    return windowObj.addEventListener('resize', (0, _debounce3.default)(function () {
      return dispatch(actionCreator(windowObj));
    }, wait));
  };
}
// listenSize(dispatch, windowObj, 50)
var listenSize = exports.listenSize = createListener(createSizeAction);
var listenHeight = exports.listenHeight = createListener(createHeightAction);
var listenWidth = exports.listenWidth = createListener(createWidthAction);

function listenResize(_ref, windowObj, wait) {
  var dispatch = _ref.dispatch,
      getState = _ref.getState;
  var reducerPath = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'windowSize';

  function actionCreator(windowObject) {
    var state = (0, _get3.default)(getState(), reducerPath);
    var height = getHeight(windowObject);
    var width = getWidth(windowObject);
    if (state.height === height) return (0, _actions.setWidth)(width);
    if (state.width === width) return (0, _actions.setHeight)(height);
    return (0, _actions.setSize)(height, width);
  }
  return createListener(actionCreator)(dispatch, windowObj, wait);
}

var sizeIdSelector = exports.sizeIdSelector = function sizeIdSelector(biggestId, sizes) {
  return (0, _cond3.default)((0, _map3.default)(sizes, function (_ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
        size = _ref3[0],
        id = _ref3[1];

    return [(0, _gte3.default)(size), (0, _constant3.default)(id)];
  }).concat([[_stubTrue3.default, (0, _constant3.default)(biggestId)]]));
};