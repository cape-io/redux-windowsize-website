'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reducerDefaults = exports.getError = exports.missingPayload = exports.missingType = undefined;

var _property2 = require('lodash/property');

var _property3 = _interopRequireDefault(_property2);

var _overSome2 = require('lodash/overSome');

var _overSome3 = _interopRequireDefault(_overSome2);

var _negate2 = require('lodash/negate');

var _negate3 = _interopRequireDefault(_negate2);

var _isFunction2 = require('lodash/isFunction');

var _isFunction3 = _interopRequireDefault(_isFunction2);

var _invoke2 = require('lodash/invoke');

var _invoke3 = _interopRequireDefault(_invoke2);

var _flow2 = require('lodash/flow');

var _flow3 = _interopRequireDefault(_flow2);

var _filter2 = require('lodash/filter');

var _filter3 = _interopRequireDefault(_filter2);

exports.noReducerOfType = noReducerOfType;
exports.invalidAction = invalidAction;
exports.immutableState = immutableState;
exports.createReducer = createReducer;

var _seamlessImmutable = require('seamless-immutable');

var _seamlessImmutable2 = _interopRequireDefault(_seamlessImmutable);

var _defaults = require('lodash/fp/defaults');

var _defaults2 = _interopRequireDefault(_defaults);

var _has = require('lodash/fp/has');

var _has2 = _interopRequireDefault(_has);

var _capeLodash = require('cape-lodash');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var missingType = exports.missingType = (0, _negate3.default)((0, _has2.default)('type'));
var missingPayload = exports.missingPayload = (0, _negate3.default)((0, _has2.default)('payload'));
var getError = exports.getError = (0, _property3.default)('error');
function noReducerOfType(reducers) {
  return (0, _flow3.default)((0, _property3.default)('type'), (0, _negate3.default)((0, _capeLodash.hasMethodOf)(reducers)));
}
function invalidAction(reducers, _ref) {
  var isInvalidAction = _ref.isInvalidAction,
      skipErrors = _ref.skipErrors,
      skipNoPayload = _ref.skipNoPayload;

  return (0, _overSome3.default)((0, _filter3.default)([missingType, skipErrors && getError, skipNoPayload && missingPayload, noReducerOfType(reducers), isInvalidAction], _isFunction3.default));
}
var reducerDefaults = exports.reducerDefaults = (0, _defaults2.default)({
  actionPick: (0, _property3.default)('payload'),
  makeImmutable: false,
  skipErrors: true,
  skipNoPayload: false
});
function immutableState(state, _ref2) {
  var makeImmutable = _ref2.makeImmutable;

  if (!makeImmutable) return state;
  return state.asMutable ? state : (0, _seamlessImmutable2.default)(state);
}
// Send reducers obj where key is type and value is func with (state, payload) sig.
function createReducer(reducers) {
  var defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var opts = reducerDefaults(options);
  var skipAction = invalidAction(reducers, opts);
  return function reducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : immutableState(defaultState, opts);
    var action = arguments[1];

    if (skipAction(action)) return state;
    return (0, _invoke3.default)(reducers, action.type, immutableState(state, opts), opts.actionPick(action));
  };
}