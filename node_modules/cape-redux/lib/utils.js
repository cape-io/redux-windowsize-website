'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _partial2 = require('lodash/partial');

var _partial3 = _interopRequireDefault(_partial2);

var _over2 = require('lodash/over');

var _over3 = _interopRequireDefault(_over2);

var _omitBy2 = require('lodash/omitBy');

var _omitBy3 = _interopRequireDefault(_omitBy2);

var _noop2 = require('lodash/noop');

var _noop3 = _interopRequireDefault(_noop2);

var _isUndefined2 = require('lodash/isUndefined');

var _isUndefined3 = _interopRequireDefault(_isUndefined2);

var _isArray2 = require('lodash/isArray');

var _isArray3 = _interopRequireDefault(_isArray2);

var _forEach2 = require('lodash/forEach');

var _forEach3 = _interopRequireDefault(_forEach2);

var _flow2 = require('lodash/flow');

var _flow3 = _interopRequireDefault(_flow2);

exports.addListener = addListener;
exports.mapDispatchToProps = mapDispatchToProps;
exports.thunkAction = thunkAction;
exports.selectorAction = selectorAction;
exports.thunkSelectorAction = thunkSelectorAction;
exports.wPyld = wPyld;

var _capeLodash = require('cape-lodash');

var _redux = require('redux');

var _createAction = require('./createAction');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

// Trigger a call to onChange() when result of selector changes.
function addListener(selector, store, onChange) {
  return store.subscribe((0, _capeLodash.handleChanges)((0, _flow3.default)(store.getState, selector), (0, _partial3.default)(onChange, store)));
}

// getActions() is passed props. Result is passed to bindActionCreators.
function mapDispatchToProps(getActions) {
  return function (dispatch, props) {
    return (0, _redux.bindActionCreators)(getActions(props), dispatch);
  };
}

// Like createSelector but it builds and dispatches an action creator.
function thunkAction() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  var actionBuilder = funcs.pop();
  return function () {
    for (var _len2 = arguments.length, actionArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      actionArgs[_key2] = arguments[_key2];
    }

    return function (dispatch, getState) {
      var action = actionBuilder.apply(undefined, _toConsumableArray((0, _over3.default)(funcs).apply(undefined, [getState()].concat(actionArgs))));
      if ((0, _isArray3.default)(action)) return (0, _forEach3.default)(action, dispatch);
      return dispatch(action);
    };
  };
}
// Uses thunkAction to create an action from selectors.
function selectorAction(type, payloadSelector) {
  var metaSelector = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _noop3.default;

  (0, _createAction.validateProps)(type, payloadSelector, metaSelector);
  return thunkAction(payloadSelector, metaSelector, function (payload, meta) {
    return (0, _omitBy3.default)({ type: type, payload: payload, meta: meta }, _isUndefined3.default);
  });
}
// Thunkify a selector that creates an action object after giving it state.
function thunkSelectorAction(actionSelector) {
  return function (dispatch, getState) {
    return dispatch(actionSelector(getState()));
  };
}
function wPyld(actionReducer) {
  return function (state, action) {
    return actionReducer(state, action.payload);
  };
}