'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _eq2 = require('lodash/eq');

var _eq3 = _interopRequireDefault(_eq2);

exports.changeChecker = changeChecker;
exports.handleChanges = handleChanges;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Give it an initial value. Returns function that will be true when value changed.
function changeChecker(initValue) {
  var currentValue = initValue;
  return function (nextValue) {
    var previousValue = currentValue;
    currentValue = nextValue;
    return !(0, _eq3.default)(previousValue, currentValue);
  };
}
// Give it a getter and an onChange callback. It will return a function.
// Call returned func on every change and it will conditionally calling onChange.
function handleChanges(getValue, onChange) {
  var valueChanged = changeChecker(getValue());
  return function () {
    var val = getValue();
    return valueChanged(val) && onChange(val);
  };
}